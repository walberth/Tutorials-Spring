diff --git a/diff.txt b/diff.txt
deleted file mode 100644
index 93122ee..0000000
--- a/diff.txt
+++ /dev/null
@@ -1,129 +0,0 @@
-diff --git a/frontend/todo/src/app/app.module.ts b/frontend/todo/src/app/app.module.ts
-index 6b42f34..d1b7305 100644
---- a/frontend/todo/src/app/app.module.ts
-+++ b/frontend/todo/src/app/app.module.ts
-@@ -11,6 +11,7 @@ import { ListTodosComponent } from './list-todos/list-todos.component';
- import { MenuComponent } from './menu/menu.component';
- import { FooterComponent } from './footer/footer.component';
- import { LogoutComponent } from './logout/logout.component';
-+import { HttpClientModule } from '@angular/common/http';
- 
- @NgModule({
-   declarations: [
-@@ -26,7 +27,8 @@ import { LogoutComponent } from './logout/logout.component';
-   imports: [
-     BrowserModule,
-     AppRoutingModule,
--    FormsModule
-+    FormsModule,
-+    HttpClientModule
-   ],
-   providers: [],
-   bootstrap: [AppComponent]
-diff --git a/frontend/todo/src/app/welcome/welcome.component.html b/frontend/todo/src/app/welcome/welcome.component.html
-index 76797b7..f2fc1dc 100644
---- a/frontend/todo/src/app/welcome/welcome.component.html
-+++ b/frontend/todo/src/app/welcome/welcome.component.html
-@@ -2,4 +2,14 @@
- 
- <div class="container">
-   Welcome {{name}}. You can manage your todos <a routerLink="/todos">here</a>
-+</div>
-+
-+<div class="container">
-+    Click this button for a special welcome message
-+    <button (click)="getWelcomeMessageWithName()">Get Welcome Message</button>
-+</div>
-+
-+<div class="container" *ngIf="welcomeMessageFromService">
-+    <H2>Your Customized Welcome Message</H2>
-+    {{welcomeMessageFromService}}
- </div>
-\ No newline at end of file
-diff --git a/frontend/todo/src/app/welcome/welcome.component.ts b/frontend/todo/src/app/welcome/welcome.component.ts
-index 2bf4fac..3df5978 100644
---- a/frontend/todo/src/app/welcome/welcome.component.ts
-+++ b/frontend/todo/src/app/welcome/welcome.component.ts
-@@ -1,3 +1,4 @@
-+import { HelloWorldDataService } from './../service/data/hello-world-data.service';
- import { ActivatedRoute } from '@angular/router';
- //package com.in28minutes.springboot.web;
- 
-@@ -17,13 +18,16 @@ import { Component, OnInit } from '@angular/core';//'./app.component';
- export class WelcomeComponent implements OnInit {
- 
-   message = 'Some Welcome Message'
-+  welcomeMessageFromService:string
-   name = ''
-   //String message = "Some Welcome Message"
-   
-   //public SpringBootFirstWebApplication() {	
- 
-   //ActivatedRoute
--  constructor(private route:ActivatedRoute) { 
-+  constructor(private route:ActivatedRoute,
-+    private service: HelloWorldDataService
-+    ) { 
- 
-   }
- 
-@@ -35,6 +39,26 @@ export class WelcomeComponent implements OnInit {
-     this.name = this.route.snapshot.params['name'];
-     
-   }
-+
-+  getWelcomeMessage() {
-+    console.log(this.service.executeHelloWorldBeanService());  
-+    this.service.executeHelloWorldBeanService().subscribe(
-+      response => this.welcomeMessageFromService = response.message,
-+      error => console.log(error)
-+    );
-+  }
-+
-+  getWelcomeMessageWithName() {
-+    console.log(this.service.executeHelloWorldBeanService());  
-+    this.service.executeHelloWorldBeanServiceWithName(this.name).subscribe(
-+      response => this.welcomeMessageFromService = response.message,
-+      error => console.log(error)
-+    );
-+  }
-+
-+  printToConsole(response){
-+    console.log(response)
-+  }
- }
- 
- export class Class1 {
-diff --git a/restful-web-services/src/main/java/com/in28minutes/rest/webservices/restfulwebservices/HelloWorldController.java b/restful-web-services/src/main/java/com/in28minutes/rest/webservices/restfulwebservices/HelloWorldController.java
-index 24287e6..d0fe5d7 100644
---- a/restful-web-services/src/main/java/com/in28minutes/rest/webservices/restfulwebservices/HelloWorldController.java
-+++ b/restful-web-services/src/main/java/com/in28minutes/rest/webservices/restfulwebservices/HelloWorldController.java
-@@ -1,11 +1,13 @@
- package com.in28minutes.rest.webservices.restfulwebservices;
- 
-+import org.springframework.web.bind.annotation.CrossOrigin;
- import org.springframework.web.bind.annotation.GetMapping;
- import org.springframework.web.bind.annotation.PathVariable;
- import org.springframework.web.bind.annotation.RestController;
- 
- //Controller
- @RestController
-+@CrossOrigin(origins = "http://localhost:4200")
- public class HelloWorldController {
- 
- 	@GetMapping(path = "/hello-world")
-@@ -15,6 +17,7 @@ public class HelloWorldController {
- 
- 	@GetMapping(path = "/hello-world-bean")
- 	public HelloWorldBean helloWorldBean() {
-+		//throw new RuntimeException("Something Went Wrong");
- 		return new HelloWorldBean("Hello World");
- 	}
- 	
-@@ -23,4 +26,4 @@ public class HelloWorldController {
- 	public HelloWorldBean helloWorldPathVariable(@PathVariable String name) {
- 		return new HelloWorldBean(String.format("Hello World, %s", name));
- 	}
--}
-+}
-\ No newline at end of file
diff --git a/frontend/todo/src/app/service/data/todo-data.service.ts b/frontend/todo/src/app/service/data/todo-data.service.ts
index 0a4d66a..171b5c8 100644
--- a/frontend/todo/src/app/service/data/todo-data.service.ts
+++ b/frontend/todo/src/app/service/data/todo-data.service.ts
@@ -1,4 +1,4 @@
-import { HttpClient } from '@angular/common/http';
+import { HttpClient, HttpHeaders } from '@angular/common/http';
 import { Injectable } from '@angular/core';
 import { Todo } from '../../list-todos/list-todos.component';
 
@@ -12,28 +12,37 @@ export class TodoDataService {
   ) { }
 
   retrieveAllTodos(username) {
-    return this.http.get<Todo[]>(`http://localhost:8080/users/${username}/todos`);
+    return this.http.get<Todo[]>(`http://localhost:8080/users/${username}/todos`, this.createHeaders());
     //console.log("Execute Hello World Bean Service")
   }
 
   deleteTodo(username, id){
-    return this.http.delete(`http://localhost:8080/users/${username}/todos/${id}`);
+    return this.http.delete(`http://localhost:8080/users/${username}/todos/${id}`, this.createHeaders());
   }
 
   retrieveTodo(username, id){
-    return this.http.get<Todo>(`http://localhost:8080/users/${username}/todos/${id}`);
+    return this.http.get<Todo>(`http://localhost:8080/users/${username}/todos/${id}`, this.createHeaders());
   }
 
   updateTodo(username, id, todo){
     return this.http.put(
                 `http://localhost:8080/users/${username}/todos/${id}`
-                , todo);
+                , todo, this.createHeaders());
   }
 
   createTodo(username, todo){
+    
     return this.http.post(
                 `http://localhost:8080/users/${username}/todos`
-                , todo);
+                , todo, this.createHeaders());
+  }
+
+  createHeaders() {
+    let username = 'in28minutes'
+    let password = 'dummy'
+    let basicAuthHeaderString = 'Basic ' + window.btoa(`${username}:${password}`);
+    const headers = new HttpHeaders({ Authorization: basicAuthHeaderString });
+    return { headers };
   }
 
 }
diff --git a/frontend/todo/src/app/service/data/welcome-data.service.ts b/frontend/todo/src/app/service/data/welcome-data.service.ts
index df020a2..1513c96 100644
--- a/frontend/todo/src/app/service/data/welcome-data.service.ts
+++ b/frontend/todo/src/app/service/data/welcome-data.service.ts
@@ -1,4 +1,5 @@
-import { HttpClient } from '@angular/common/http';
+import { map } from 'rxjs/operators';
+import { HttpClient, HttpHeaders } from '@angular/common/http';
 import { Injectable } from '@angular/core';
 
 export class HelloWorldBean {
@@ -21,8 +22,28 @@ export class WelcomeDataService {
   //http://localhost:8080/hello-world/path-variable/in28minutes
 
   executeHelloWorldServiceWithPathVariable(name) {
-    return this.http.get<HelloWorldBean>(`http://localhost:8080/hello-world/path-variable/${name}`);
+    let username = 'in28minutes'
+    let password = 'dummy'
+    let basicAuthHeaderString = 'Basic ' + window.btoa(`${username}:${password}`);
+    const headers = new HttpHeaders({ Authorization: basicAuthHeaderString });
+    console.log(headers);
+
+    return this.http.get<HelloWorldBean>(`http://localhost:8080/hello-world/path-variable/${name}`, {headers});
     //console.log("Execute Hello World Bean Service")
   }
 
+  executeBasicAuthenticationService(username, password) {
+    let basicAuthHeaderString = 'Basic ' + window.btoa(`${username}:${password}`);
+    const headers = new HttpHeaders({ Authorization: basicAuthHeaderString });
+    console.log(headers);
+    return this.http.get(`http://localhost:8080/authenticate`, { headers })
+      .pipe(
+        map(user => {
+          console.log(user);
+          return user;
+        }));
+  }
+
+
+  
 }
diff --git a/frontend/todo/src/app/todo/todo.component.css b/frontend/todo/src/app/todo/todo.component.css
index e69de29..7343c3c 100644
--- a/frontend/todo/src/app/todo/todo.component.css
+++ b/frontend/todo/src/app/todo/todo.component.css
@@ -0,0 +1,3 @@
+.ng-invalid:not(form) {
+    border-left: 5px solid #a94442;
+}
\ No newline at end of file
diff --git a/frontend/todo/src/app/todo/todo.component.html b/frontend/todo/src/app/todo/todo.component.html
index a5967da..93fe464 100644
--- a/frontend/todo/src/app/todo/todo.component.html
+++ b/frontend/todo/src/app/todo/todo.component.html
@@ -1,20 +1,26 @@
 <H1>Todo</H1>
 
 <div class="container">
-  
-  <fieldset class="form-group">
-    <label>Description</label>
-    <input type="text" [(ngModel)]="todo.description" class="form-control" name="description" required="required">
-  </fieldset>
 
-  <fieldset class="form-group">
-      <label>Target Date</label>
-      <input type="date" 
-      [ngModel]="todo.targetDate | date:'yyyy-MM-dd' "
-      (ngModelChange)="todo.targetDate = $event"
-      class="form-control" name="targetDate" required="required">
-  </fieldset>
+  <form #todoForm="ngForm" (ngSubmit)="!todoForm.invalid && saveTodo()">
+      <div class="alert alert-warning" *ngIf='todoForm.dirty && todoForm.invalid'>Enter Valid Values</div>
+      <div class="alert alert-warning" *ngIf='todoForm.dirty && targetDate.invalid'>Enter Valid Target Date</div>
+      <div class="alert alert-warning" *ngIf='todoForm.dirty && description.invalid'>Enter atleast 5 characters in Description</div>
 
-  <button class="btn btn-success" (click)="saveTodo()">Save</button>
+    <fieldset class="form-group">
+      <label>Description</label>
+      <input type="text" #description="ngModel" #login="ngModel" [(ngModel)]="todo.description" class="form-control" name="description" required="required" minlength="5" >
+    </fieldset>
+
+    <fieldset class="form-group">
+        <label>Target Date</label>
+        <input type="date" #targetDate="ngModel"
+        [ngModel]="todo.targetDate | date:'yyyy-MM-dd' "
+        (ngModelChange)="todo.targetDate = $event"
+        class="form-control" name="targetDate" required="required">
+    </fieldset>
+
+    <button type="submit" class="btn btn-success">Save</button>
+  </form>
 
 </div>
\ No newline at end of file
diff --git a/frontend/todo/src/app/welcome/welcome.component.ts b/frontend/todo/src/app/welcome/welcome.component.ts
index 857e705..1c7e53f 100644
--- a/frontend/todo/src/app/welcome/welcome.component.ts
+++ b/frontend/todo/src/app/welcome/welcome.component.ts
@@ -55,11 +55,18 @@ export class WelcomeComponent implements OnInit {
 
   getWelcomeMessageWithParameter() {
     //console.log(this.service.executeHelloWorldBeanService());
-    
-    this.service.executeHelloWorldServiceWithPathVariable(this.name).subscribe(
+
+    this.service.executeBasicAuthenticationService('in28minutes','dummy').subscribe(
       response => this.handleSuccessfulResponse(response),
       error => this.handleErrorResponse(error)
     );
+
+    
+    
+    // this.service.executeHelloWorldServiceWithPathVariable(this.name).subscribe(
+    //   response => this.handleSuccessfulResponse(response),
+    //   error => this.handleErrorResponse(error)
+    // );
     
     //console.log('last line of getWelcomeMessage')
 
diff --git a/restful-web-services/pom.xml b/restful-web-services/pom.xml
index f928221..98f8d55 100644
--- a/restful-web-services/pom.xml
+++ b/restful-web-services/pom.xml
@@ -38,6 +38,11 @@
 
 		<dependency>
 			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-security</artifactId>
+		</dependency>
+
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
 			<artifactId>spring-boot-devtools</artifactId>
 			<scope>runtime</scope>
 		</dependency>
diff --git a/restful-web-services/src/main/java/com/in28minutes/rest/webservices/restfulwebservices/todo/TodoResource.java b/restful-web-services/src/main/java/com/in28minutes/rest/webservices/restfulwebservices/todo/TodoResource.java
index ee390e6..6ad07d8 100644
--- a/restful-web-services/src/main/java/com/in28minutes/rest/webservices/restfulwebservices/todo/TodoResource.java
+++ b/restful-web-services/src/main/java/com/in28minutes/rest/webservices/restfulwebservices/todo/TodoResource.java
@@ -18,63 +18,59 @@ import org.springframework.web.servlet.support.ServletUriComponentsBuilder;
 
 import com.in28minutes.rest.webservices.restfulwebservices.todo.Todo;
 
-@CrossOrigin(origins="http://localhost:4200")
+@CrossOrigin(origins = "http://localhost:4200")
 @RestController
 public class TodoResource {
-	
+
 	@Autowired
 	private TodoHardcodedService todoService;
-	
+
 	@GetMapping("/users/{username}/todos")
-	public List<Todo> getAllTodos(@PathVariable String username){
+	public List<Todo> getAllTodos(@PathVariable String username) {
 		return todoService.findAll();
 	}
 
 	@GetMapping("/users/{username}/todos/{id}")
-	public Todo getTodo(@PathVariable String username, @PathVariable long id){
+	public Todo getTodo(@PathVariable String username, @PathVariable long id) {
 		return todoService.findById(id);
 	}
 
-	//DELETE /users/{username}/todos/{id}
+	// DELETE /users/{username}/todos/{id}
 	@DeleteMapping("/users/{username}/todos/{id}")
-	public ResponseEntity<Void> deleteTodo(
-			@PathVariable String username, @PathVariable long id){
-		
+	public ResponseEntity<Void> deleteTodo(@PathVariable String username, @PathVariable long id) {
+
 		Todo todo = todoService.deleteById(id);
-		
-		if(todo!=null) {
+
+		if (todo != null) {
 			return ResponseEntity.noContent().build();
 		}
-		
+
 		return ResponseEntity.notFound().build();
 	}
-	
 
-	//Edit/Update a Todo
-	//PUT /users/{user_name}/todos/{todo_id}
+	// Edit/Update a Todo
+	// PUT /users/{user_name}/todos/{todo_id}
 	@PutMapping("/users/{username}/todos/{id}")
-	public ResponseEntity<Todo> updateTodo(
-			@PathVariable String username,
-			@PathVariable long id, @RequestBody Todo todo){
-		
+	public ResponseEntity<Todo> updateTodo(@PathVariable String username, @PathVariable long id,
+			@RequestBody Todo todo) {
+
 		Todo todoUpdated = todoService.save(todo);
-		
+
 		return new ResponseEntity<Todo>(todo, HttpStatus.OK);
 	}
-	
+
 	@PostMapping("/users/{username}/todos")
-	public ResponseEntity<Void> updateTodo(
-			@PathVariable String username, @RequestBody Todo todo){
-		
+	public ResponseEntity<Void> updateTodo(@PathVariable String username, @RequestBody Todo todo) {
+
 		Todo createdTodo = todoService.save(todo);
-		
-		//Location
-		//Get current resource url
-		///{id}
-		URI uri = ServletUriComponentsBuilder.fromCurrentRequest()
-				.path("/{id}").buildAndExpand(createdTodo.getId()).toUri();
-		
+
+		// Location
+		// Get current resource url
+		/// {id}
+		URI uri = ServletUriComponentsBuilder.fromCurrentRequest().path("/{id}").buildAndExpand(createdTodo.getId())
+				.toUri();
+
 		return ResponseEntity.created(uri).build();
 	}
-		
+
 }
diff --git a/restful-web-services/src/main/resources/application.properties b/restful-web-services/src/main/resources/application.properties
index 5cbf315..4ec0ded 100644
--- a/restful-web-services/src/main/resources/application.properties
+++ b/restful-web-services/src/main/resources/application.properties
@@ -1 +1,4 @@
-logging.level.org.springframework = info
\ No newline at end of file
+logging.level.org.springframework = info
+
+spring.security.user.name=in28minutes
+spring.security.user.password=dummy
